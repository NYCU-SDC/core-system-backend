name: Lint, Test, and Build Backend

on:
  pull_request:
    branches:
      - main

jobs:
  Lint:
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Setup Sqlc
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: '1.28.0'

      - name: Setup mockery
        uses: brokeyourbike/go-mockery-action@v0
        with:
          mockery-version: '2.53.3'

      - name: Test
        run: make test

  Build:
    needs: Test
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Setup Sqlc
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: '1.25.0'

      - name: Setup mockery
        uses: brokeyourbike/go-mockery-action@v0
        with:
          mockery-version: '2.53.3'

      - name: Build
        run: |
          go mod download
          make gen
          env GOOS=linux GOARCH=arm64 go build -o bin/backend cmd/backend/main.go

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          push: true
          tags: |
            nycusdc/core-system-backend:pr-${{ github.event.number }}
            nycusdc/core-system-backend:${{ github.sha }}
          context: .

  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger n8n Snapshot Webhook
        run: |
          curl -X POST https://webhook.eng.sdc.nycu.club/webhook/deploy \
            -H "Content-Type: application/json" \
            -d '{
              "source": {
                "title": "Core System",
                "repo": "${{ github.repository }}",
                "branch": "${{ github.head_ref || github.ref_name }}",
                "commit": "${{ github.sha }}",
                "pr_number": "${{ github.event.pull_request.number }}",
                "pr_title": "${{ github.event.pull_request.title }}"
              },
              "method": "deploy",
              "metadata": {
                "environment": "snapshot"
              },
              "post": {
                "notify_discord": {
                  "enable": true,
                  "channel": "core-system-activity"
                }
              }
            }'
